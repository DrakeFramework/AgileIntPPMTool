{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\dnelson\\\\ideaProjects\\\\PPMToolUdemyTutorial\\\\ppmtool-react-client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_PROJECTS } from \"../actions/types\"; //an array of projects and a single project in the def of the state\n\nconst initialState = {\n  projects: [],\n  project: {}\n}; // this works the same as the error reducer (boilerplate)\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    //when called using the GET_PROJECTS type defined in types.js\n    case GET_PROJECTS:\n      //an array of states\n      return _objectSpread({}, state, {\n        projects: action.payload\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/dnelson/ideaProjects/PPMToolUdemyTutorial/ppmtool-react-client/src/reducers/projectReducer.js"],"names":["GET_PROJECTS","initialState","projects","project","state","action","type","payload"],"mappings":";;;;;;AAAA,SAASA,YAAT,QAA6B,kBAA7B,C,CAEA;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,OAAO,EAAE;AAFU,CAArB,C,CAKA;;AACA,eAAe,UAASC,KAAK,GAAGH,YAAjB,EAA+BI,MAA/B,EAAuC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE;AACA,SAAKN,YAAL;AACE;AACA,+BACKI,KADL;AAEEF,QAAAA,QAAQ,EAAEG,MAAM,CAACE;AAFnB;;AAIF;AACE,aAAOH,KAAP;AATJ;AAWD","sourcesContent":["import { GET_PROJECTS } from \"../actions/types\";\r\n\r\n//an array of projects and a single project in the def of the state\r\nconst initialState = {\r\n  projects: [],\r\n  project: {}\r\n};\r\n\r\n// this works the same as the error reducer (boilerplate)\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    //when called using the GET_PROJECTS type defined in types.js\r\n    case GET_PROJECTS:\r\n      //an array of states\r\n      return {\r\n        ...state,\r\n        projects: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}