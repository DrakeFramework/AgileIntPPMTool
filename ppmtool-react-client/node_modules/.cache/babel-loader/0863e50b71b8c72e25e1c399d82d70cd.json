{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dnelson\\\\ideaProjects\\\\PPMToolUdemyTutorial\\\\ppmtool-react-client\\\\src\\\\components\\\\Project\\\\UpdateProject.js\";\nimport React, { Component } from \"react\"; //import the get project action to fill out the data\n\nimport { getProject } from \"../../actions/projectActions\"; //get the proptypes package to handle props\n\nimport PropTypes from \"prop-types\"; //get connect from react redux so we can wire routes\n\nimport { connect } from \"react-redux\"; //get the classnames  package for form validation (error fields)\n\nimport classnames from \"classnames\"; //rcc tab to auto create and then separate out the export\n//this component has to fetch and then route to update\n\nclass UpdateProject extends Component {\n  // set the state\n  //create constructor\n  constructor() {\n    super();\n    this.state = {\n      id: \"\",\n      projectIdentifier: \"\",\n      projectName: \"\",\n      description: \"\",\n      startDate: \"\",\n      endDate: \"\"\n    };\n  } //add life cycle hook for mounting the state\n\n\n  componentWillReceiveProps(nextProps) {} //add the life cycle hook\n\n\n  componentDidMount() {\n    //extract the id from the params passed in through the \"get\" api call for fetch\n    const id = this.props.match.params.id; //pass the id from fetch and the history into the getProject\n    //now we can see our project object in the state (redux)\n\n    this.props.getProject(id, this.props.history);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"project\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-8 m-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"display-4 text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Update Project form\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control form-control-lg \",\n      placeholder: \"Project Name\",\n      name: \"projectName\",\n      value: this.state.projectName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control form-control-lg\",\n      placeholder: \"Unique Project ID\",\n      disabled: true,\n      name: \"projectIdentifier\",\n      value: this.state.projectIdentifier,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      className: \"form-control form-control-lg\",\n      placeholder: \"Project Description\",\n      name: \"description\",\n      value: this.state.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Start Date\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"date\",\n      className: \"form-control form-control-lg\",\n      name: \"startDate\",\n      value: this.state.startDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Estimated End Date\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"date\",\n      className: \"form-control form-control-lg\",\n      name: \"endDate\",\n      value: this.state.endDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-primary btn-block mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }))))));\n  }\n\n} //add proptypes\n\n\nUpdateProject.propTypes = {\n  //get project function mapped to proptype\n  getProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired\n}; //map the state to props\n\nconst mapStateToProps = state => ({\n  project: state.project.project\n}); //connect to getProject\n\n\nexport default connect(mapStateToProps, {\n  getProject\n})(UpdateProject);","map":{"version":3,"sources":["C:/Users/dnelson/ideaProjects/PPMToolUdemyTutorial/ppmtool-react-client/src/components/Project/UpdateProject.js"],"names":["React","Component","getProject","PropTypes","connect","classnames","UpdateProject","constructor","state","id","projectIdentifier","projectName","description","startDate","endDate","componentWillReceiveProps","nextProps","componentDidMount","props","match","params","history","render","propTypes","func","isRequired","project","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n//import the get project action to fill out the data\r\nimport { getProject } from \"../../actions/projectActions\";\r\n//get the proptypes package to handle props\r\nimport PropTypes from \"prop-types\";\r\n//get connect from react redux so we can wire routes\r\nimport { connect } from \"react-redux\";\r\n//get the classnames  package for form validation (error fields)\r\nimport classnames from \"classnames\";\r\n\r\n//rcc tab to auto create and then separate out the export\r\n//this component has to fetch and then route to update\r\nclass UpdateProject extends Component {\r\n  // set the state\r\n  //create constructor\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id: \"\",\r\n      projectIdentifier: \"\",\r\n      projectName: \"\",\r\n      description: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\"\r\n    };\r\n  }\r\n\r\n  //add life cycle hook for mounting the state\r\n  componentWillReceiveProps(nextProps) {}\r\n\r\n  //add the life cycle hook\r\n  componentDidMount() {\r\n    //extract the id from the params passed in through the \"get\" api call for fetch\r\n    const { id } = this.props.match.params;\r\n    //pass the id from fetch and the history into the getProject\r\n    //now we can see our project object in the state (redux)\r\n    this.props.getProject(id, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n              <hr />\r\n              <form>\r\n                <div className=\"form-group\">\r\n                  {/* this is wired from state to value of the field for updating */}\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg \"\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Unique Project ID\"\r\n                    disabled\r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                  />\r\n                </div>\r\n                {/*<!-- disabled for Edit Only!! remove \"disabled\" for the Create operation -->*/}\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                  ></textarea>\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"startDate\"\r\n                    value={this.state.startDate}\r\n                  />\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"endDate\"\r\n                    value={this.state.endDate}\r\n                  />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//add proptypes\r\nUpdateProject.propTypes = {\r\n  //get project function mapped to proptype\r\n  getProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired\r\n};\r\n\r\n//map the state to props\r\nconst mapStateToProps = state => ({\r\n  project: state.project.project\r\n});\r\n\r\n//connect to getProject\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProject }\r\n)(UpdateProject);\r\n"]},"metadata":{},"sourceType":"module"}