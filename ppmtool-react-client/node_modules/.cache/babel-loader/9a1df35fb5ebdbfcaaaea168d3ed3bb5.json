{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dnelson\\\\ideaProjects\\\\PPMToolUdemyTutorial\\\\ppmtool-react-client\\\\src\\\\components\\\\Dashboard.js\";\nimport React, { Component } from \"react\";\nimport ProjectItem from \"./Project/ProjectItem\";\nimport CreateProjectButton from \"./Project/CreateProjectButton\"; //import the conector for provider\n\nimport { connect } from \"react-redux\"; //import the get projects reducer\n\nimport { getProjects } from \"../actions/projectActions\"; //import the properties\n\nimport PropTypes from \"prop-types\";\n\nclass Dashboard extends Component {\n  //another lifecycle hook for when we mount the component\n  //setting state here will trigger re rendering\n  componentDidMount() {\n    this.props.getProjects();\n  }\n\n  render() {\n    //###### example #######\n    // create a project object from props\n    // const projectObject = {\n    //   projectName: \"ProjectName PROPS\",\n    //   projectIdentifier: \"IDPRO\",\n    //   description: \"Discription coming from props\"\n    // };\n    // #####################\n    //get the projects list from props and map it onto the dashboard component\n    const projects = this.props.project.projects; //  <!-- Dashboard Component -->\n\n    return React.createElement(\"div\", {\n      className: \"projects\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"display-4 text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Projects\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(CreateProjectButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(ProjectItem, {\n      project: projectObject,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })))));\n  }\n\n} //set the properties\n\n\nDashboard.propTypes = {\n  //these allow us to map project state to properties (react -> redux)\n  project: PropTypes.object.isRequired,\n  getProjects: PropTypes.func.isRequired\n}; //map it up to the project in index.js\n\nconst mapStateToProps = state => ({\n  //these allow us to map project properties to state (redux -> react)\n  project: state.project\n}); //connect to the store\n\n\nexport default connect(mapStateToProps, {\n  getProjects\n})(Dashboard);","map":{"version":3,"sources":["C:/Users/dnelson/ideaProjects/PPMToolUdemyTutorial/ppmtool-react-client/src/components/Dashboard.js"],"names":["React","Component","ProjectItem","CreateProjectButton","connect","getProjects","PropTypes","Dashboard","componentDidMount","props","render","projects","project","projectObject","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,mBAAP,MAAgC,+BAAhC,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AACA,SAASC,WAAT,QAA4B,2BAA5B,C,CACA;;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,SAAN,SAAwBN,SAAxB,CAAkC;AAChC;AACA;AACAO,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWJ,WAAX;AACD;;AAEDK,EAAAA,MAAM,GAAG;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,UAAMC,QAAQ,GAAG,KAAKF,KAAL,CAAWG,OAAX,CAAmBD,QAApC,CAXO,CAaP;;AACA,WACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAIE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAWE,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAEE,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,CADF,CADF,CADF,CADF;AAqBD;;AA1C+B,C,CA6ClC;;;AACAN,SAAS,CAACO,SAAV,GAAsB;AACpB;AACAF,EAAAA,OAAO,EAAEN,SAAS,CAACS,MAAV,CAAiBC,UAFN;AAGpBX,EAAAA,WAAW,EAAEC,SAAS,CAACW,IAAV,CAAeD;AAHR,CAAtB,C,CAMA;;AACA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChC;AACAP,EAAAA,OAAO,EAAEO,KAAK,CAACP;AAFiB,CAAL,CAA7B,C,CAKA;;;AACA,eAAeR,OAAO,CACpBc,eADoB,EAEpB;AAAEb,EAAAA;AAAF,CAFoB,CAAP,CAGbE,SAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport ProjectItem from \"./Project/ProjectItem\";\r\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\r\n//import the conector for provider\r\nimport { connect } from \"react-redux\";\r\n//import the get projects reducer\r\nimport { getProjects } from \"../actions/projectActions\";\r\n//import the properties\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Dashboard extends Component {\r\n  //another lifecycle hook for when we mount the component\r\n  //setting state here will trigger re rendering\r\n  componentDidMount() {\r\n    this.props.getProjects();\r\n  }\r\n\r\n  render() {\r\n    //###### example #######\r\n    // create a project object from props\r\n    // const projectObject = {\r\n    //   projectName: \"ProjectName PROPS\",\r\n    //   projectIdentifier: \"IDPRO\",\r\n    //   description: \"Discription coming from props\"\r\n    // };\r\n    // #####################\r\n\r\n    //get the projects list from props and map it onto the dashboard component\r\n    const projects = this.props.project.projects;\r\n\r\n    //  <!-- Dashboard Component -->\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">Projects</h1>\r\n              <br />\r\n              {/*this is the CreateProjectButton.js constant */}\r\n              <CreateProjectButton />\r\n              <br />\r\n              <hr />\r\n              {/* route to the project item */}\r\n              {/*<ProjectItem />*/}\r\n              {/* we want to pass props from dashboard to the project item so we can add them to state and display */}\r\n              {/* pull project from props */}\r\n              <ProjectItem project={projectObject} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//set the properties\r\nDashboard.propTypes = {\r\n  //these allow us to map project state to properties (react -> redux)\r\n  project: PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired\r\n};\r\n\r\n//map it up to the project in index.js\r\nconst mapStateToProps = state => ({\r\n  //these allow us to map project properties to state (redux -> react)\r\n  project: state.project\r\n});\r\n\r\n//connect to the store\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProjects }\r\n)(Dashboard);\r\n"]},"metadata":{},"sourceType":"module"}